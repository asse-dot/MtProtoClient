//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.messages;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GetChatInviteImporters extends TlObject {

    public static final int ID = -553329330;

    public boolean requested;
	public TlObject peer;
	public String link;
	public String q;
	public int offset_date;
	public TlObject offset_user;
	public int limit;

    public GetChatInviteImporters(boolean requested, TlObject peer, String link, String q, int offset_date, TlObject offset_user, int limit) {
        this.requested = requested;
		this.peer = peer;
		this.link = link;
		this.q = q;
		this.offset_date = offset_date;
		this.offset_user = offset_user;
		this.limit = limit;
    }

    public static GetChatInviteImporters read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean requested = (flags & (1 << 0)) != 0;
		TlObject peer = TlObject.read(bytes);
		String link = (flags & (1 << 1)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		String q = (flags & (1 << 2)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		int offset_date = IntPrimitive.read(bytes).getValue();
		TlObject offset_user = TlObject.read(bytes);
		int limit = IntPrimitive.read(bytes).getValue();
		
		return new GetChatInviteImporters(requested, peer, link, q, offset_date, offset_user, limit);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.requested ? (1 << 0) : 0;
		flags |= (this.link != null) ? (1 << 1) : 0;
		flags |= (this.q != null) ? (1 << 2) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		if(this.link != null)
			bOut.write(new StringPrimitive(this.link).write());
		if(this.q != null)
			bOut.write(new StringPrimitive(this.q).write());
		bOut.write(new IntPrimitive(this.offset_date).write());
		bOut.write(this.offset_user.write());
		bOut.write(new IntPrimitive(this.limit).write());
		
		return bOut.toByteArray();
    }
}
