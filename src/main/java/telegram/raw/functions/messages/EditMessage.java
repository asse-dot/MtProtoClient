//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.messages;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class EditMessage extends TlObject {

    public static final int ID = 1224152952;

    public boolean no_webpage;
	public TlObject peer;
	public int id;
	public String message;
	public TlObject media;
	public TlObject reply_markup;
	public ArrayList<TlObject> entities;
	public int schedule_date;

    public EditMessage(boolean no_webpage, TlObject peer, int id, String message, TlObject media, TlObject reply_markup, ArrayList<TlObject> entities, int schedule_date) {
        this.no_webpage = no_webpage;
		this.peer = peer;
		this.id = id;
		this.message = message;
		this.media = media;
		this.reply_markup = reply_markup;
		this.entities = entities;
		this.schedule_date = schedule_date;
    }

    public static EditMessage read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean no_webpage = (flags & (1 << 1)) != 0;
		TlObject peer = TlObject.read(bytes);
		int id = IntPrimitive.read(bytes).getValue();
		String message = (flags & (1 << 11)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		TlObject media = (flags & (1 << 14)) != 0 ?  TlObject.read(bytes) : null;
		TlObject reply_markup = (flags & (1 << 2)) != 0 ?  TlObject.read(bytes) : null;
		ArrayList<TlObject> entities = (flags & (1 << 3)) != 0 ?  ((VectorPrimitive)TlObject.read(bytes)).getValue() : null;
		int schedule_date = (flags & (1 << 15)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new EditMessage(no_webpage, peer, id, message, media, reply_markup, entities, schedule_date);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.no_webpage ? (1 << 1) : 0;
		flags |= (this.message != null) ? (1 << 11) : 0;
		flags |= (this.media != null) ? (1 << 14) : 0;
		flags |= (this.reply_markup != null) ? (1 << 2) : 0;
		flags |= (this.entities != null) ? (1 << 3) : 0;
		flags |= (this.schedule_date != 0) ? (1 << 15) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		bOut.write(new IntPrimitive(this.id).write());
		if(this.message != null)
			bOut.write(new StringPrimitive(this.message).write());
		if(this.media != null)
			bOut.write(this.media.write());
		if(this.reply_markup != null)
			bOut.write(this.reply_markup.write());
		if(this.entities != null)
			bOut.write(new VectorPrimitive(this.entities).write());
		if(this.schedule_date != 0)
			bOut.write(new IntPrimitive(this.schedule_date).write());
		
		return bOut.toByteArray();
    }
}
