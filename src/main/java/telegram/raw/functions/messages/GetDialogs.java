//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.messages;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GetDialogs extends TlObject {

    public static final int ID = -1594569905;

    public boolean exclude_pinned;
	public int folder_id;
	public int offset_date;
	public int offset_id;
	public TlObject offset_peer;
	public int limit;
	public long hash;

    public GetDialogs(boolean exclude_pinned, int folder_id, int offset_date, int offset_id, TlObject offset_peer, int limit, long hash) {
        this.exclude_pinned = exclude_pinned;
		this.folder_id = folder_id;
		this.offset_date = offset_date;
		this.offset_id = offset_id;
		this.offset_peer = offset_peer;
		this.limit = limit;
		this.hash = hash;
    }

    public static GetDialogs read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean exclude_pinned = (flags & (1 << 0)) != 0;
		int folder_id = (flags & (1 << 1)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		int offset_date = IntPrimitive.read(bytes).getValue();
		int offset_id = IntPrimitive.read(bytes).getValue();
		TlObject offset_peer = TlObject.read(bytes);
		int limit = IntPrimitive.read(bytes).getValue();
		long hash = LongPrimitive.read(bytes).getValue();
		
		return new GetDialogs(exclude_pinned, folder_id, offset_date, offset_id, offset_peer, limit, hash);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.exclude_pinned ? (1 << 0) : 0;
		flags |= (this.folder_id != 0) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		if(this.folder_id != 0)
			bOut.write(new IntPrimitive(this.folder_id).write());
		bOut.write(new IntPrimitive(this.offset_date).write());
		bOut.write(new IntPrimitive(this.offset_id).write());
		bOut.write(this.offset_peer.write());
		bOut.write(new IntPrimitive(this.limit).write());
		bOut.write(new LongPrimitive(this.hash).write());
		
		return bOut.toByteArray();
    }
}
