//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.messages;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class TranslateText extends TlObject {

    public static final int ID = 1662529584;

    public TlObject peer;
	public ArrayList<TlObject> id;
	public ArrayList<TlObject> text;
	public String to_lang;

    public TranslateText(TlObject peer, ArrayList<TlObject> id, ArrayList<TlObject> text, String to_lang) {
        this.peer = peer;
		this.id = id;
		this.text = text;
		this.to_lang = to_lang;
    }

    public static TranslateText read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject peer = (flags & (1 << 0)) != 0 ?  TlObject.read(bytes) : null;
		ArrayList<TlObject> id = (flags & (1 << 0)) != 0 ?  ((VectorPrimitive)TlObject.read(bytes)).getValue() : null;
		ArrayList<TlObject> text = (flags & (1 << 1)) != 0 ?  ((VectorPrimitive)TlObject.read(bytes)).getValue() : null;
		String to_lang = StringPrimitive.read(bytes).getValue();
		
		return new TranslateText(peer, id, text, to_lang);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.peer != null) ? (1 << 0) : 0;
		flags |= (this.id != null) ? (1 << 0) : 0;
		flags |= (this.text != null) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		if(this.peer != null)
			bOut.write(this.peer.write());
		if(this.id != null)
			bOut.write(new VectorPrimitive(this.id).write());
		if(this.text != null)
			bOut.write(new VectorPrimitive(this.text).write());
		bOut.write(new StringPrimitive(this.to_lang).write());
		
		return bOut.toByteArray();
    }
}
