//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.messages;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class ForwardMessages extends TlObject {

    public static final int ID = -966673468;

    public boolean silent;
	public boolean background;
	public boolean with_my_score;
	public boolean drop_author;
	public boolean drop_media_captions;
	public boolean noforwards;
	public TlObject from_peer;
	public ArrayList<TlObject> id;
	public ArrayList<TlObject> random_id;
	public TlObject to_peer;
	public int top_msg_id;
	public int schedule_date;
	public TlObject send_as;

    public ForwardMessages(boolean silent, boolean background, boolean with_my_score, boolean drop_author, boolean drop_media_captions, boolean noforwards, TlObject from_peer, ArrayList<TlObject> id, ArrayList<TlObject> random_id, TlObject to_peer, int top_msg_id, int schedule_date, TlObject send_as) {
        this.silent = silent;
		this.background = background;
		this.with_my_score = with_my_score;
		this.drop_author = drop_author;
		this.drop_media_captions = drop_media_captions;
		this.noforwards = noforwards;
		this.from_peer = from_peer;
		this.id = id;
		this.random_id = random_id;
		this.to_peer = to_peer;
		this.top_msg_id = top_msg_id;
		this.schedule_date = schedule_date;
		this.send_as = send_as;
    }

    public static ForwardMessages read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean silent = (flags & (1 << 5)) != 0;
		boolean background = (flags & (1 << 6)) != 0;
		boolean with_my_score = (flags & (1 << 8)) != 0;
		boolean drop_author = (flags & (1 << 11)) != 0;
		boolean drop_media_captions = (flags & (1 << 12)) != 0;
		boolean noforwards = (flags & (1 << 14)) != 0;
		TlObject from_peer = TlObject.read(bytes);
		ArrayList<TlObject> id = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> random_id = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		TlObject to_peer = TlObject.read(bytes);
		int top_msg_id = (flags & (1 << 9)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		int schedule_date = (flags & (1 << 10)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		TlObject send_as = (flags & (1 << 13)) != 0 ?  TlObject.read(bytes) : null;
		
		return new ForwardMessages(silent, background, with_my_score, drop_author, drop_media_captions, noforwards, from_peer, id, random_id, to_peer, top_msg_id, schedule_date, send_as);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.silent ? (1 << 5) : 0;
		flags |= this.background ? (1 << 6) : 0;
		flags |= this.with_my_score ? (1 << 8) : 0;
		flags |= this.drop_author ? (1 << 11) : 0;
		flags |= this.drop_media_captions ? (1 << 12) : 0;
		flags |= this.noforwards ? (1 << 14) : 0;
		flags |= (this.top_msg_id != 0) ? (1 << 9) : 0;
		flags |= (this.schedule_date != 0) ? (1 << 10) : 0;
		flags |= (this.send_as != null) ? (1 << 13) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.from_peer.write());
		bOut.write(new VectorPrimitive(this.id).write());
		bOut.write(new VectorPrimitive(this.random_id).write());
		bOut.write(this.to_peer.write());
		if(this.top_msg_id != 0)
			bOut.write(new IntPrimitive(this.top_msg_id).write());
		if(this.schedule_date != 0)
			bOut.write(new IntPrimitive(this.schedule_date).write());
		if(this.send_as != null)
			bOut.write(this.send_as.write());
		
		return bOut.toByteArray();
    }
}
