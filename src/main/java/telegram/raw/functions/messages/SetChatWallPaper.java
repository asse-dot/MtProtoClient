//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.messages;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class SetChatWallPaper extends TlObject {

    public static final int ID = -1879389471;

    public TlObject peer;
	public TlObject wallpaper;
	public TlObject settings;
	public int id;

    public SetChatWallPaper(TlObject peer, TlObject wallpaper, TlObject settings, int id) {
        this.peer = peer;
		this.wallpaper = wallpaper;
		this.settings = settings;
		this.id = id;
    }

    public static SetChatWallPaper read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject peer = TlObject.read(bytes);
		TlObject wallpaper = (flags & (1 << 0)) != 0 ?  TlObject.read(bytes) : null;
		TlObject settings = (flags & (1 << 2)) != 0 ?  TlObject.read(bytes) : null;
		int id = (flags & (1 << 1)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new SetChatWallPaper(peer, wallpaper, settings, id);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.wallpaper != null) ? (1 << 0) : 0;
		flags |= (this.settings != null) ? (1 << 2) : 0;
		flags |= (this.id != 0) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		if(this.wallpaper != null)
			bOut.write(this.wallpaper.write());
		if(this.settings != null)
			bOut.write(this.settings.write());
		if(this.id != 0)
			bOut.write(new IntPrimitive(this.id).write());
		
		return bOut.toByteArray();
    }
}
