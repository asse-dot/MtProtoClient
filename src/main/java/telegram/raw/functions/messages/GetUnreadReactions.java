//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.messages;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GetUnreadReactions extends TlObject {

    public static final int ID = 841173339;

    public TlObject peer;
	public int top_msg_id;
	public int offset_id;
	public int add_offset;
	public int limit;
	public int max_id;
	public int min_id;

    public GetUnreadReactions(TlObject peer, int top_msg_id, int offset_id, int add_offset, int limit, int max_id, int min_id) {
        this.peer = peer;
		this.top_msg_id = top_msg_id;
		this.offset_id = offset_id;
		this.add_offset = add_offset;
		this.limit = limit;
		this.max_id = max_id;
		this.min_id = min_id;
    }

    public static GetUnreadReactions read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject peer = TlObject.read(bytes);
		int top_msg_id = (flags & (1 << 0)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		int offset_id = IntPrimitive.read(bytes).getValue();
		int add_offset = IntPrimitive.read(bytes).getValue();
		int limit = IntPrimitive.read(bytes).getValue();
		int max_id = IntPrimitive.read(bytes).getValue();
		int min_id = IntPrimitive.read(bytes).getValue();
		
		return new GetUnreadReactions(peer, top_msg_id, offset_id, add_offset, limit, max_id, min_id);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.top_msg_id != 0) ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		if(this.top_msg_id != 0)
			bOut.write(new IntPrimitive(this.top_msg_id).write());
		bOut.write(new IntPrimitive(this.offset_id).write());
		bOut.write(new IntPrimitive(this.add_offset).write());
		bOut.write(new IntPrimitive(this.limit).write());
		bOut.write(new IntPrimitive(this.max_id).write());
		bOut.write(new IntPrimitive(this.min_id).write());
		
		return bOut.toByteArray();
    }
}
