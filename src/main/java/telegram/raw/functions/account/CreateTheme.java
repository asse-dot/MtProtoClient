//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.account;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class CreateTheme extends TlObject {

    public static final int ID = 1697530880;

    public String slug;
	public String title;
	public TlObject document;
	public ArrayList<TlObject> settings;

    public CreateTheme(String slug, String title, TlObject document, ArrayList<TlObject> settings) {
        this.slug = slug;
		this.title = title;
		this.document = document;
		this.settings = settings;
    }

    public static CreateTheme read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		String slug = StringPrimitive.read(bytes).getValue();
		String title = StringPrimitive.read(bytes).getValue();
		TlObject document = (flags & (1 << 2)) != 0 ?  TlObject.read(bytes) : null;
		ArrayList<TlObject> settings = (flags & (1 << 3)) != 0 ?  ((VectorPrimitive)TlObject.read(bytes)).getValue() : null;
		
		return new CreateTheme(slug, title, document, settings);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.document != null) ? (1 << 2) : 0;
		flags |= (this.settings != null) ? (1 << 3) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new StringPrimitive(this.slug).write());
		bOut.write(new StringPrimitive(this.title).write());
		if(this.document != null)
			bOut.write(this.document.write());
		if(this.settings != null)
			bOut.write(new VectorPrimitive(this.settings).write());
		
		return bOut.toByteArray();
    }
}
