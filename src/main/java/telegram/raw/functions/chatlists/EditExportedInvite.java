//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.chatlists;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class EditExportedInvite extends TlObject {

    public static final int ID = 1698543165;

    public TlObject chatlist;
	public String slug;
	public String title;
	public ArrayList<TlObject> peers;

    public EditExportedInvite(TlObject chatlist, String slug, String title, ArrayList<TlObject> peers) {
        this.chatlist = chatlist;
		this.slug = slug;
		this.title = title;
		this.peers = peers;
    }

    public static EditExportedInvite read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject chatlist = TlObject.read(bytes);
		String slug = StringPrimitive.read(bytes).getValue();
		String title = (flags & (1 << 1)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		ArrayList<TlObject> peers = (flags & (1 << 2)) != 0 ?  ((VectorPrimitive)TlObject.read(bytes)).getValue() : null;
		
		return new EditExportedInvite(chatlist, slug, title, peers);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.title != null) ? (1 << 1) : 0;
		flags |= (this.peers != null) ? (1 << 2) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.chatlist.write());
		bOut.write(new StringPrimitive(this.slug).write());
		if(this.title != null)
			bOut.write(new StringPrimitive(this.title).write());
		if(this.peers != null)
			bOut.write(new VectorPrimitive(this.peers).write());
		
		return bOut.toByteArray();
    }
}
