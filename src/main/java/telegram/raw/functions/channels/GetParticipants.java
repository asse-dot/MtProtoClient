//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.channels;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GetParticipants extends TlObject {

    public static final int ID = 2010044880;

    public TlObject channel;
	public TlObject filter;
	public int offset;
	public int limit;
	public long hash;

    public GetParticipants(TlObject channel, TlObject filter, int offset, int limit, long hash) {
        this.channel = channel;
		this.filter = filter;
		this.offset = offset;
		this.limit = limit;
		this.hash = hash;
    }

    public static GetParticipants read(ByteArrayInputStream bytes) throws IOException {
        TlObject channel = TlObject.read(bytes);
		TlObject filter = TlObject.read(bytes);
		int offset = IntPrimitive.read(bytes).getValue();
		int limit = IntPrimitive.read(bytes).getValue();
		long hash = LongPrimitive.read(bytes).getValue();
		
		return new GetParticipants(channel, filter, offset, limit, hash);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		
		
		bOut.write(this.channel.write());
		bOut.write(this.filter.write());
		bOut.write(new IntPrimitive(this.offset).write());
		bOut.write(new IntPrimitive(this.limit).write());
		bOut.write(new LongPrimitive(this.hash).write());
		
		return bOut.toByteArray();
    }
}
