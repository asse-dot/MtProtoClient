//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.channels;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GetForumTopics extends TlObject {

    public static final int ID = 233136337;

    public TlObject channel;
	public String q;
	public int offset_date;
	public int offset_id;
	public int offset_topic;
	public int limit;

    public GetForumTopics(TlObject channel, String q, int offset_date, int offset_id, int offset_topic, int limit) {
        this.channel = channel;
		this.q = q;
		this.offset_date = offset_date;
		this.offset_id = offset_id;
		this.offset_topic = offset_topic;
		this.limit = limit;
    }

    public static GetForumTopics read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject channel = TlObject.read(bytes);
		String q = (flags & (1 << 0)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		int offset_date = IntPrimitive.read(bytes).getValue();
		int offset_id = IntPrimitive.read(bytes).getValue();
		int offset_topic = IntPrimitive.read(bytes).getValue();
		int limit = IntPrimitive.read(bytes).getValue();
		
		return new GetForumTopics(channel, q, offset_date, offset_id, offset_topic, limit);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.q != null) ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.channel.write());
		if(this.q != null)
			bOut.write(new StringPrimitive(this.q).write());
		bOut.write(new IntPrimitive(this.offset_date).write());
		bOut.write(new IntPrimitive(this.offset_id).write());
		bOut.write(new IntPrimitive(this.offset_topic).write());
		bOut.write(new IntPrimitive(this.limit).write());
		
		return bOut.toByteArray();
    }
}
