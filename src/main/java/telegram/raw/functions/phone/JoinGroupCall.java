//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.phone;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class JoinGroupCall extends TlObject {

    public static final int ID = -1322057861;

    public boolean muted;
	public boolean video_stopped;
	public TlObject call;
	public TlObject join_as;
	public String invite_hash;
	public TlObject params;

    public JoinGroupCall(boolean muted, boolean video_stopped, TlObject call, TlObject join_as, String invite_hash, TlObject params) {
        this.muted = muted;
		this.video_stopped = video_stopped;
		this.call = call;
		this.join_as = join_as;
		this.invite_hash = invite_hash;
		this.params = params;
    }

    public static JoinGroupCall read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean muted = (flags & (1 << 0)) != 0;
		boolean video_stopped = (flags & (1 << 2)) != 0;
		TlObject call = TlObject.read(bytes);
		TlObject join_as = TlObject.read(bytes);
		String invite_hash = (flags & (1 << 1)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		TlObject params = TlObject.read(bytes);
		
		return new JoinGroupCall(muted, video_stopped, call, join_as, invite_hash, params);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.muted ? (1 << 0) : 0;
		flags |= this.video_stopped ? (1 << 2) : 0;
		flags |= (this.invite_hash != null) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.call.write());
		bOut.write(this.join_as.write());
		if(this.invite_hash != null)
			bOut.write(new StringPrimitive(this.invite_hash).write());
		bOut.write(this.params.write());
		
		return bOut.toByteArray();
    }
}
