//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.phone;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class CreateGroupCall extends TlObject {

    public static final int ID = 1221445336;

    public boolean rtmp_stream;
	public TlObject peer;
	public int random_id;
	public String title;
	public int schedule_date;

    public CreateGroupCall(boolean rtmp_stream, TlObject peer, int random_id, String title, int schedule_date) {
        this.rtmp_stream = rtmp_stream;
		this.peer = peer;
		this.random_id = random_id;
		this.title = title;
		this.schedule_date = schedule_date;
    }

    public static CreateGroupCall read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean rtmp_stream = (flags & (1 << 2)) != 0;
		TlObject peer = TlObject.read(bytes);
		int random_id = IntPrimitive.read(bytes).getValue();
		String title = (flags & (1 << 0)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		int schedule_date = (flags & (1 << 1)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new CreateGroupCall(rtmp_stream, peer, random_id, title, schedule_date);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.rtmp_stream ? (1 << 2) : 0;
		flags |= (this.title != null) ? (1 << 0) : 0;
		flags |= (this.schedule_date != 0) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		bOut.write(new IntPrimitive(this.random_id).write());
		if(this.title != null)
			bOut.write(new StringPrimitive(this.title).write());
		if(this.schedule_date != 0)
			bOut.write(new IntPrimitive(this.schedule_date).write());
		
		return bOut.toByteArray();
    }
}
