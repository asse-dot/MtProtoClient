//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.updates;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GetDifference extends TlObject {

    public static final int ID = 630429265;

    public int pts;
	public int pts_total_limit;
	public int date;
	public int qts;

    public GetDifference(int pts, int pts_total_limit, int date, int qts) {
        this.pts = pts;
		this.pts_total_limit = pts_total_limit;
		this.date = date;
		this.qts = qts;
    }

    public static GetDifference read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		int pts = IntPrimitive.read(bytes).getValue();
		int pts_total_limit = (flags & (1 << 0)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		int date = IntPrimitive.read(bytes).getValue();
		int qts = IntPrimitive.read(bytes).getValue();
		
		return new GetDifference(pts, pts_total_limit, date, qts);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.pts_total_limit != 0) ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new IntPrimitive(this.pts).write());
		if(this.pts_total_limit != 0)
			bOut.write(new IntPrimitive(this.pts_total_limit).write());
		bOut.write(new IntPrimitive(this.date).write());
		bOut.write(new IntPrimitive(this.qts).write());
		
		return bOut.toByteArray();
    }
}
