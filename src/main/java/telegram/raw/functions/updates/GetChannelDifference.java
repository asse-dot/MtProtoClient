//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.functions.updates;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GetChannelDifference extends TlObject {

    public static final int ID = 51854712;

    public boolean force;
	public TlObject channel;
	public TlObject filter;
	public int pts;
	public int limit;

    public GetChannelDifference(boolean force, TlObject channel, TlObject filter, int pts, int limit) {
        this.force = force;
		this.channel = channel;
		this.filter = filter;
		this.pts = pts;
		this.limit = limit;
    }

    public static GetChannelDifference read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean force = (flags & (1 << 0)) != 0;
		TlObject channel = TlObject.read(bytes);
		TlObject filter = TlObject.read(bytes);
		int pts = IntPrimitive.read(bytes).getValue();
		int limit = IntPrimitive.read(bytes).getValue();
		
		return new GetChannelDifference(force, channel, filter, pts, limit);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.force ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.channel.write());
		bOut.write(this.filter.write());
		bOut.write(new IntPrimitive(this.pts).write());
		bOut.write(new IntPrimitive(this.limit).write());
		
		return bOut.toByteArray();
    }
}
