//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class LangPackDifference extends TlObject {

    public static final int ID = -209337866;

    public String lang_code;
	public int from_version;
	public int version;
	public ArrayList<TlObject> strings;

    public LangPackDifference(String lang_code, int from_version, int version, ArrayList<TlObject> strings) {
        this.lang_code = lang_code;
		this.from_version = from_version;
		this.version = version;
		this.strings = strings;
    }

    public static LangPackDifference read(ByteArrayInputStream bytes) throws IOException {
        String lang_code = StringPrimitive.read(bytes).getValue();
		int from_version = IntPrimitive.read(bytes).getValue();
		int version = IntPrimitive.read(bytes).getValue();
		ArrayList<TlObject> strings = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		
		return new LangPackDifference(lang_code, from_version, version, strings);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		
		
		bOut.write(new StringPrimitive(this.lang_code).write());
		bOut.write(new IntPrimitive(this.from_version).write());
		bOut.write(new IntPrimitive(this.version).write());
		bOut.write(new VectorPrimitive(this.strings).write());
		
		return bOut.toByteArray();
    }
}
