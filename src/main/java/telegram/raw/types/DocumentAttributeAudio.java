//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class DocumentAttributeAudio extends TlObject {

    public static final int ID = -1739392570;

    public boolean voice;
	public int duration;
	public String title;
	public String performer;
	public byte[] waveform;

    public DocumentAttributeAudio(boolean voice, int duration, String title, String performer, byte[] waveform) {
        this.voice = voice;
		this.duration = duration;
		this.title = title;
		this.performer = performer;
		this.waveform = waveform;
    }

    public static DocumentAttributeAudio read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean voice = (flags & (1 << 10)) != 0;
		int duration = IntPrimitive.read(bytes).getValue();
		String title = (flags & (1 << 0)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		String performer = (flags & (1 << 1)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		byte[] waveform = (flags & (1 << 2)) != 0 ?  BytesPrimitive.read(bytes).getValue() : null;
		
		return new DocumentAttributeAudio(voice, duration, title, performer, waveform);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.voice ? (1 << 10) : 0;
		flags |= (this.title != null) ? (1 << 0) : 0;
		flags |= (this.performer != null) ? (1 << 1) : 0;
		flags |= (this.waveform != null) ? (1 << 2) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new IntPrimitive(this.duration).write());
		if(this.title != null)
			bOut.write(new StringPrimitive(this.title).write());
		if(this.performer != null)
			bOut.write(new StringPrimitive(this.performer).write());
		if(this.waveform != null)
			bOut.write(new BytesPrimitive(this.waveform).write());
		
		return bOut.toByteArray();
    }
}
