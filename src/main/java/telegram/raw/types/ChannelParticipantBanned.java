//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class ChannelParticipantBanned extends TlObject {

    public static final int ID = 1844969806;

    public boolean left;
	public TlObject peer;
	public long kicked_by;
	public int date;
	public TlObject banned_rights;

    public ChannelParticipantBanned(boolean left, TlObject peer, long kicked_by, int date, TlObject banned_rights) {
        this.left = left;
		this.peer = peer;
		this.kicked_by = kicked_by;
		this.date = date;
		this.banned_rights = banned_rights;
    }

    public static ChannelParticipantBanned read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean left = (flags & (1 << 0)) != 0;
		TlObject peer = TlObject.read(bytes);
		long kicked_by = LongPrimitive.read(bytes).getValue();
		int date = IntPrimitive.read(bytes).getValue();
		TlObject banned_rights = TlObject.read(bytes);
		
		return new ChannelParticipantBanned(left, peer, kicked_by, date, banned_rights);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.left ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		bOut.write(new LongPrimitive(this.kicked_by).write());
		bOut.write(new IntPrimitive(this.date).write());
		bOut.write(this.banned_rights.write());
		
		return bOut.toByteArray();
    }
}
