//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class UpdateTranscribedAudio extends TlObject {

    public static final int ID = 8703322;

    public boolean pending;
	public TlObject peer;
	public int msg_id;
	public long transcription_id;
	public String text;

    public UpdateTranscribedAudio(boolean pending, TlObject peer, int msg_id, long transcription_id, String text) {
        this.pending = pending;
		this.peer = peer;
		this.msg_id = msg_id;
		this.transcription_id = transcription_id;
		this.text = text;
    }

    public static UpdateTranscribedAudio read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean pending = (flags & (1 << 0)) != 0;
		TlObject peer = TlObject.read(bytes);
		int msg_id = IntPrimitive.read(bytes).getValue();
		long transcription_id = LongPrimitive.read(bytes).getValue();
		String text = StringPrimitive.read(bytes).getValue();
		
		return new UpdateTranscribedAudio(pending, peer, msg_id, transcription_id, text);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.pending ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		bOut.write(new IntPrimitive(this.msg_id).write());
		bOut.write(new LongPrimitive(this.transcription_id).write());
		bOut.write(new StringPrimitive(this.text).write());
		
		return bOut.toByteArray();
    }
}
