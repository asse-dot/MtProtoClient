//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class WallPaper extends TlObject {

    public static final int ID = -1539849235;

    public long id;
	public boolean creator;
	public boolean defaultv;
	public boolean pattern;
	public boolean dark;
	public long access_hash;
	public String slug;
	public TlObject document;
	public TlObject settings;

    public WallPaper(long id, boolean creator, boolean defaultv, boolean pattern, boolean dark, long access_hash, String slug, TlObject document, TlObject settings) {
        this.id = id;
		this.creator = creator;
		this.defaultv = defaultv;
		this.pattern = pattern;
		this.dark = dark;
		this.access_hash = access_hash;
		this.slug = slug;
		this.document = document;
		this.settings = settings;
    }

    public static WallPaper read(ByteArrayInputStream bytes) throws IOException {
        long id = LongPrimitive.read(bytes).getValue();
		int flags = IntPrimitive.read(bytes).getValue();
		boolean creator = (flags & (1 << 0)) != 0;
		boolean defaultv = (flags & (1 << 1)) != 0;
		boolean pattern = (flags & (1 << 3)) != 0;
		boolean dark = (flags & (1 << 4)) != 0;
		long access_hash = LongPrimitive.read(bytes).getValue();
		String slug = StringPrimitive.read(bytes).getValue();
		TlObject document = TlObject.read(bytes);
		TlObject settings = (flags & (1 << 2)) != 0 ?  TlObject.read(bytes) : null;
		
		return new WallPaper(id, creator, defaultv, pattern, dark, access_hash, slug, document, settings);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.creator ? (1 << 0) : 0;
		flags |= this.defaultv ? (1 << 1) : 0;
		flags |= this.pattern ? (1 << 3) : 0;
		flags |= this.dark ? (1 << 4) : 0;
		flags |= (this.settings != null) ? (1 << 2) : 0;
		
		
		bOut.write(new LongPrimitive(this.id).write());
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new LongPrimitive(this.access_hash).write());
		bOut.write(new StringPrimitive(this.slug).write());
		bOut.write(this.document.write());
		if(this.settings != null)
			bOut.write(this.settings.write());
		
		return bOut.toByteArray();
    }
}
