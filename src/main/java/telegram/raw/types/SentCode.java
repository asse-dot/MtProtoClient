//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types.auth;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class SentCode extends TlObject {

    public static final int ID = 1577067778;

    public TlObject type;
	public String phone_code_hash;
	public TlObject next_type;
	public int timeout;

    public SentCode(TlObject type, String phone_code_hash, TlObject next_type, int timeout) {
        this.type = type;
		this.phone_code_hash = phone_code_hash;
		this.next_type = next_type;
		this.timeout = timeout;
    }

    public static SentCode read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject type = TlObject.read(bytes);
		String phone_code_hash = StringPrimitive.read(bytes).getValue();
		TlObject next_type = (flags & (1 << 1)) != 0 ?  TlObject.read(bytes) : null;
		int timeout = (flags & (1 << 2)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new SentCode(type, phone_code_hash, next_type, timeout);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.next_type != null) ? (1 << 1) : 0;
		flags |= (this.timeout != 0) ? (1 << 2) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.type.write());
		bOut.write(new StringPrimitive(this.phone_code_hash).write());
		if(this.next_type != null)
			bOut.write(this.next_type.write());
		if(this.timeout != 0)
			bOut.write(new IntPrimitive(this.timeout).write());
		
		return bOut.toByteArray();
    }
}
