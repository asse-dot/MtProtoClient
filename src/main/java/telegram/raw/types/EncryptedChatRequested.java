//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class EncryptedChatRequested extends TlObject {

    public static final int ID = 1223809356;

    public int folder_id;
	public int id;
	public long access_hash;
	public int date;
	public long admin_id;
	public long participant_id;
	public byte[] g_a;

    public EncryptedChatRequested(int folder_id, int id, long access_hash, int date, long admin_id, long participant_id, byte[] g_a) {
        this.folder_id = folder_id;
		this.id = id;
		this.access_hash = access_hash;
		this.date = date;
		this.admin_id = admin_id;
		this.participant_id = participant_id;
		this.g_a = g_a;
    }

    public static EncryptedChatRequested read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		int folder_id = (flags & (1 << 0)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		int id = IntPrimitive.read(bytes).getValue();
		long access_hash = LongPrimitive.read(bytes).getValue();
		int date = IntPrimitive.read(bytes).getValue();
		long admin_id = LongPrimitive.read(bytes).getValue();
		long participant_id = LongPrimitive.read(bytes).getValue();
		byte[] g_a = BytesPrimitive.read(bytes).getValue();
		
		return new EncryptedChatRequested(folder_id, id, access_hash, date, admin_id, participant_id, g_a);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.folder_id != 0) ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		if(this.folder_id != 0)
			bOut.write(new IntPrimitive(this.folder_id).write());
		bOut.write(new IntPrimitive(this.id).write());
		bOut.write(new LongPrimitive(this.access_hash).write());
		bOut.write(new IntPrimitive(this.date).write());
		bOut.write(new LongPrimitive(this.admin_id).write());
		bOut.write(new LongPrimitive(this.participant_id).write());
		bOut.write(new BytesPrimitive(this.g_a).write());
		
		return bOut.toByteArray();
    }
}
