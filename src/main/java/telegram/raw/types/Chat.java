//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class Chat extends TlObject {

    public static final int ID = 1103884886;

    public boolean creator;
	public boolean left;
	public boolean deactivated;
	public boolean call_active;
	public boolean call_not_empty;
	public boolean noforwards;
	public long id;
	public String title;
	public TlObject photo;
	public int participants_count;
	public int date;
	public int version;
	public TlObject migrated_to;
	public TlObject admin_rights;
	public TlObject default_banned_rights;

    public Chat(boolean creator, boolean left, boolean deactivated, boolean call_active, boolean call_not_empty, boolean noforwards, long id, String title, TlObject photo, int participants_count, int date, int version, TlObject migrated_to, TlObject admin_rights, TlObject default_banned_rights) {
        this.creator = creator;
		this.left = left;
		this.deactivated = deactivated;
		this.call_active = call_active;
		this.call_not_empty = call_not_empty;
		this.noforwards = noforwards;
		this.id = id;
		this.title = title;
		this.photo = photo;
		this.participants_count = participants_count;
		this.date = date;
		this.version = version;
		this.migrated_to = migrated_to;
		this.admin_rights = admin_rights;
		this.default_banned_rights = default_banned_rights;
    }

    public static Chat read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean creator = (flags & (1 << 0)) != 0;
		boolean left = (flags & (1 << 2)) != 0;
		boolean deactivated = (flags & (1 << 5)) != 0;
		boolean call_active = (flags & (1 << 23)) != 0;
		boolean call_not_empty = (flags & (1 << 24)) != 0;
		boolean noforwards = (flags & (1 << 25)) != 0;
		long id = LongPrimitive.read(bytes).getValue();
		String title = StringPrimitive.read(bytes).getValue();
		TlObject photo = TlObject.read(bytes);
		int participants_count = IntPrimitive.read(bytes).getValue();
		int date = IntPrimitive.read(bytes).getValue();
		int version = IntPrimitive.read(bytes).getValue();
		TlObject migrated_to = (flags & (1 << 6)) != 0 ?  TlObject.read(bytes) : null;
		TlObject admin_rights = (flags & (1 << 14)) != 0 ?  TlObject.read(bytes) : null;
		TlObject default_banned_rights = (flags & (1 << 18)) != 0 ?  TlObject.read(bytes) : null;
		
		return new Chat(creator, left, deactivated, call_active, call_not_empty, noforwards, id, title, photo, participants_count, date, version, migrated_to, admin_rights, default_banned_rights);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.creator ? (1 << 0) : 0;
		flags |= this.left ? (1 << 2) : 0;
		flags |= this.deactivated ? (1 << 5) : 0;
		flags |= this.call_active ? (1 << 23) : 0;
		flags |= this.call_not_empty ? (1 << 24) : 0;
		flags |= this.noforwards ? (1 << 25) : 0;
		flags |= (this.migrated_to != null) ? (1 << 6) : 0;
		flags |= (this.admin_rights != null) ? (1 << 14) : 0;
		flags |= (this.default_banned_rights != null) ? (1 << 18) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new LongPrimitive(this.id).write());
		bOut.write(new StringPrimitive(this.title).write());
		bOut.write(this.photo.write());
		bOut.write(new IntPrimitive(this.participants_count).write());
		bOut.write(new IntPrimitive(this.date).write());
		bOut.write(new IntPrimitive(this.version).write());
		if(this.migrated_to != null)
			bOut.write(this.migrated_to.write());
		if(this.admin_rights != null)
			bOut.write(this.admin_rights.write());
		if(this.default_banned_rights != null)
			bOut.write(this.default_banned_rights.write());
		
		return bOut.toByteArray();
    }
}
