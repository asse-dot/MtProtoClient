//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class DocumentAttributeVideo extends TlObject {

    public static final int ID = 250621158;

    public boolean round_message;
	public boolean supports_streaming;
	public int duration;
	public int w;
	public int h;

    public DocumentAttributeVideo(boolean round_message, boolean supports_streaming, int duration, int w, int h) {
        this.round_message = round_message;
		this.supports_streaming = supports_streaming;
		this.duration = duration;
		this.w = w;
		this.h = h;
    }

    public static DocumentAttributeVideo read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean round_message = (flags & (1 << 0)) != 0;
		boolean supports_streaming = (flags & (1 << 1)) != 0;
		int duration = IntPrimitive.read(bytes).getValue();
		int w = IntPrimitive.read(bytes).getValue();
		int h = IntPrimitive.read(bytes).getValue();
		
		return new DocumentAttributeVideo(round_message, supports_streaming, duration, w, h);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.round_message ? (1 << 0) : 0;
		flags |= this.supports_streaming ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new IntPrimitive(this.duration).write());
		bOut.write(new IntPrimitive(this.w).write());
		bOut.write(new IntPrimitive(this.h).write());
		
		return bOut.toByteArray();
    }
}
