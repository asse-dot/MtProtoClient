//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class SecureValue extends TlObject {

    public static final int ID = 411017418;

    public TlObject type;
	public TlObject data;
	public TlObject front_side;
	public TlObject reverse_side;
	public TlObject selfie;
	public ArrayList<TlObject> translation;
	public ArrayList<TlObject> files;
	public TlObject plain_data;
	public byte[] hash;

    public SecureValue(TlObject type, TlObject data, TlObject front_side, TlObject reverse_side, TlObject selfie, ArrayList<TlObject> translation, ArrayList<TlObject> files, TlObject plain_data, byte[] hash) {
        this.type = type;
		this.data = data;
		this.front_side = front_side;
		this.reverse_side = reverse_side;
		this.selfie = selfie;
		this.translation = translation;
		this.files = files;
		this.plain_data = plain_data;
		this.hash = hash;
    }

    public static SecureValue read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject type = TlObject.read(bytes);
		TlObject data = (flags & (1 << 0)) != 0 ?  TlObject.read(bytes) : null;
		TlObject front_side = (flags & (1 << 1)) != 0 ?  TlObject.read(bytes) : null;
		TlObject reverse_side = (flags & (1 << 2)) != 0 ?  TlObject.read(bytes) : null;
		TlObject selfie = (flags & (1 << 3)) != 0 ?  TlObject.read(bytes) : null;
		ArrayList<TlObject> translation = (flags & (1 << 6)) != 0 ?  ((VectorPrimitive)TlObject.read(bytes)).getValue() : null;
		ArrayList<TlObject> files = (flags & (1 << 4)) != 0 ?  ((VectorPrimitive)TlObject.read(bytes)).getValue() : null;
		TlObject plain_data = (flags & (1 << 5)) != 0 ?  TlObject.read(bytes) : null;
		byte[] hash = BytesPrimitive.read(bytes).getValue();
		
		return new SecureValue(type, data, front_side, reverse_side, selfie, translation, files, plain_data, hash);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.data != null) ? (1 << 0) : 0;
		flags |= (this.front_side != null) ? (1 << 1) : 0;
		flags |= (this.reverse_side != null) ? (1 << 2) : 0;
		flags |= (this.selfie != null) ? (1 << 3) : 0;
		flags |= (this.translation != null) ? (1 << 6) : 0;
		flags |= (this.files != null) ? (1 << 4) : 0;
		flags |= (this.plain_data != null) ? (1 << 5) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.type.write());
		if(this.data != null)
			bOut.write(this.data.write());
		if(this.front_side != null)
			bOut.write(this.front_side.write());
		if(this.reverse_side != null)
			bOut.write(this.reverse_side.write());
		if(this.selfie != null)
			bOut.write(this.selfie.write());
		if(this.translation != null)
			bOut.write(new VectorPrimitive(this.translation).write());
		if(this.files != null)
			bOut.write(new VectorPrimitive(this.files).write());
		if(this.plain_data != null)
			bOut.write(this.plain_data.write());
		bOut.write(new BytesPrimitive(this.hash).write());
		
		return bOut.toByteArray();
    }
}
