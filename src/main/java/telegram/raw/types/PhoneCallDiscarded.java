//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class PhoneCallDiscarded extends TlObject {

    public static final int ID = 1355435489;

    public boolean need_rating;
	public boolean need_debug;
	public boolean video;
	public long id;
	public TlObject reason;
	public int duration;

    public PhoneCallDiscarded(boolean need_rating, boolean need_debug, boolean video, long id, TlObject reason, int duration) {
        this.need_rating = need_rating;
		this.need_debug = need_debug;
		this.video = video;
		this.id = id;
		this.reason = reason;
		this.duration = duration;
    }

    public static PhoneCallDiscarded read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean need_rating = (flags & (1 << 2)) != 0;
		boolean need_debug = (flags & (1 << 3)) != 0;
		boolean video = (flags & (1 << 6)) != 0;
		long id = LongPrimitive.read(bytes).getValue();
		TlObject reason = (flags & (1 << 0)) != 0 ?  TlObject.read(bytes) : null;
		int duration = (flags & (1 << 1)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new PhoneCallDiscarded(need_rating, need_debug, video, id, reason, duration);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.need_rating ? (1 << 2) : 0;
		flags |= this.need_debug ? (1 << 3) : 0;
		flags |= this.video ? (1 << 6) : 0;
		flags |= (this.reason != null) ? (1 << 0) : 0;
		flags |= (this.duration != 0) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new LongPrimitive(this.id).write());
		if(this.reason != null)
			bOut.write(this.reason.write());
		if(this.duration != 0)
			bOut.write(new IntPrimitive(this.duration).write());
		
		return bOut.toByteArray();
    }
}
