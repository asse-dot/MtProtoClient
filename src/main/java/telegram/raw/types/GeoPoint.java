//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GeoPoint extends TlObject {

    public static final int ID = -1297942941;

    public TlObject longv;
	public TlObject lat;
	public long access_hash;
	public int accuracy_radius;

    public GeoPoint(TlObject longv, TlObject lat, long access_hash, int accuracy_radius) {
        this.longv = longv;
		this.lat = lat;
		this.access_hash = access_hash;
		this.accuracy_radius = accuracy_radius;
    }

    public static GeoPoint read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		TlObject longv = TlObject.read(bytes);
		TlObject lat = TlObject.read(bytes);
		long access_hash = LongPrimitive.read(bytes).getValue();
		int accuracy_radius = (flags & (1 << 0)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new GeoPoint(longv, lat, access_hash, accuracy_radius);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.accuracy_radius != 0) ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.longv.write());
		bOut.write(this.lat.write());
		bOut.write(new LongPrimitive(this.access_hash).write());
		if(this.accuracy_radius != 0)
			bOut.write(new IntPrimitive(this.accuracy_radius).write());
		
		return bOut.toByteArray();
    }
}
