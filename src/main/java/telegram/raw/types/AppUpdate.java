//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types.help;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class AppUpdate extends TlObject {

    public static final int ID = -860107216;

    public boolean can_not_skip;
	public int id;
	public String version;
	public String text;
	public ArrayList<TlObject> entities;
	public TlObject document;
	public String url;
	public TlObject sticker;

    public AppUpdate(boolean can_not_skip, int id, String version, String text, ArrayList<TlObject> entities, TlObject document, String url, TlObject sticker) {
        this.can_not_skip = can_not_skip;
		this.id = id;
		this.version = version;
		this.text = text;
		this.entities = entities;
		this.document = document;
		this.url = url;
		this.sticker = sticker;
    }

    public static AppUpdate read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean can_not_skip = (flags & (1 << 0)) != 0;
		int id = IntPrimitive.read(bytes).getValue();
		String version = StringPrimitive.read(bytes).getValue();
		String text = StringPrimitive.read(bytes).getValue();
		ArrayList<TlObject> entities = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		TlObject document = (flags & (1 << 1)) != 0 ?  TlObject.read(bytes) : null;
		String url = (flags & (1 << 2)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		TlObject sticker = (flags & (1 << 3)) != 0 ?  TlObject.read(bytes) : null;
		
		return new AppUpdate(can_not_skip, id, version, text, entities, document, url, sticker);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.can_not_skip ? (1 << 0) : 0;
		flags |= (this.document != null) ? (1 << 1) : 0;
		flags |= (this.url != null) ? (1 << 2) : 0;
		flags |= (this.sticker != null) ? (1 << 3) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new IntPrimitive(this.id).write());
		bOut.write(new StringPrimitive(this.version).write());
		bOut.write(new StringPrimitive(this.text).write());
		bOut.write(new VectorPrimitive(this.entities).write());
		if(this.document != null)
			bOut.write(this.document.write());
		if(this.url != null)
			bOut.write(new StringPrimitive(this.url).write());
		if(this.sticker != null)
			bOut.write(this.sticker.write());
		
		return bOut.toByteArray();
    }
}
