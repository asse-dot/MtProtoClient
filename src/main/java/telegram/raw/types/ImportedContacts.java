//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types.contacts;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class ImportedContacts extends TlObject {

    public static final int ID = 2010127419;

    public ArrayList<TlObject> imported;
	public ArrayList<TlObject> popular_invites;
	public ArrayList<TlObject> retry_contacts;
	public ArrayList<TlObject> users;

    public ImportedContacts(ArrayList<TlObject> imported, ArrayList<TlObject> popular_invites, ArrayList<TlObject> retry_contacts, ArrayList<TlObject> users) {
        this.imported = imported;
		this.popular_invites = popular_invites;
		this.retry_contacts = retry_contacts;
		this.users = users;
    }

    public static ImportedContacts read(ByteArrayInputStream bytes) throws IOException {
        ArrayList<TlObject> imported = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> popular_invites = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> retry_contacts = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> users = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		
		return new ImportedContacts(imported, popular_invites, retry_contacts, users);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		
		
		bOut.write(new VectorPrimitive(this.imported).write());
		bOut.write(new VectorPrimitive(this.popular_invites).write());
		bOut.write(new VectorPrimitive(this.retry_contacts).write());
		bOut.write(new VectorPrimitive(this.users).write());
		
		return bOut.toByteArray();
    }
}
