//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class Authorization extends TlObject {

    public static final int ID = -1392388579;

    public boolean current;
	public boolean official_app;
	public boolean password_pending;
	public boolean encrypted_requests_disabled;
	public boolean call_requests_disabled;
	public long hash;
	public String device_model;
	public String platform;
	public String system_version;
	public int api_id;
	public String app_name;
	public String app_version;
	public int date_created;
	public int date_active;
	public String ip;
	public String country;
	public String region;

    public Authorization(boolean current, boolean official_app, boolean password_pending, boolean encrypted_requests_disabled, boolean call_requests_disabled, long hash, String device_model, String platform, String system_version, int api_id, String app_name, String app_version, int date_created, int date_active, String ip, String country, String region) {
        this.current = current;
		this.official_app = official_app;
		this.password_pending = password_pending;
		this.encrypted_requests_disabled = encrypted_requests_disabled;
		this.call_requests_disabled = call_requests_disabled;
		this.hash = hash;
		this.device_model = device_model;
		this.platform = platform;
		this.system_version = system_version;
		this.api_id = api_id;
		this.app_name = app_name;
		this.app_version = app_version;
		this.date_created = date_created;
		this.date_active = date_active;
		this.ip = ip;
		this.country = country;
		this.region = region;
    }

    public static Authorization read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean current = (flags & (1 << 0)) != 0;
		boolean official_app = (flags & (1 << 1)) != 0;
		boolean password_pending = (flags & (1 << 2)) != 0;
		boolean encrypted_requests_disabled = (flags & (1 << 3)) != 0;
		boolean call_requests_disabled = (flags & (1 << 4)) != 0;
		long hash = LongPrimitive.read(bytes).getValue();
		String device_model = StringPrimitive.read(bytes).getValue();
		String platform = StringPrimitive.read(bytes).getValue();
		String system_version = StringPrimitive.read(bytes).getValue();
		int api_id = IntPrimitive.read(bytes).getValue();
		String app_name = StringPrimitive.read(bytes).getValue();
		String app_version = StringPrimitive.read(bytes).getValue();
		int date_created = IntPrimitive.read(bytes).getValue();
		int date_active = IntPrimitive.read(bytes).getValue();
		String ip = StringPrimitive.read(bytes).getValue();
		String country = StringPrimitive.read(bytes).getValue();
		String region = StringPrimitive.read(bytes).getValue();
		
		return new Authorization(current, official_app, password_pending, encrypted_requests_disabled, call_requests_disabled, hash, device_model, platform, system_version, api_id, app_name, app_version, date_created, date_active, ip, country, region);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.current ? (1 << 0) : 0;
		flags |= this.official_app ? (1 << 1) : 0;
		flags |= this.password_pending ? (1 << 2) : 0;
		flags |= this.encrypted_requests_disabled ? (1 << 3) : 0;
		flags |= this.call_requests_disabled ? (1 << 4) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new LongPrimitive(this.hash).write());
		bOut.write(new StringPrimitive(this.device_model).write());
		bOut.write(new StringPrimitive(this.platform).write());
		bOut.write(new StringPrimitive(this.system_version).write());
		bOut.write(new IntPrimitive(this.api_id).write());
		bOut.write(new StringPrimitive(this.app_name).write());
		bOut.write(new StringPrimitive(this.app_version).write());
		bOut.write(new IntPrimitive(this.date_created).write());
		bOut.write(new IntPrimitive(this.date_active).write());
		bOut.write(new StringPrimitive(this.ip).write());
		bOut.write(new StringPrimitive(this.country).write());
		bOut.write(new StringPrimitive(this.region).write());
		
		return bOut.toByteArray();
    }
}
