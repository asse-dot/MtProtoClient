//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types.upload;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class FileCdnRedirect extends TlObject {

    public static final int ID = -242427324;

    public int dc_id;
	public byte[] file_token;
	public byte[] encryption_key;
	public byte[] encryption_iv;
	public ArrayList<TlObject> file_hashes;

    public FileCdnRedirect(int dc_id, byte[] file_token, byte[] encryption_key, byte[] encryption_iv, ArrayList<TlObject> file_hashes) {
        this.dc_id = dc_id;
		this.file_token = file_token;
		this.encryption_key = encryption_key;
		this.encryption_iv = encryption_iv;
		this.file_hashes = file_hashes;
    }

    public static FileCdnRedirect read(ByteArrayInputStream bytes) throws IOException {
        int dc_id = IntPrimitive.read(bytes).getValue();
		byte[] file_token = BytesPrimitive.read(bytes).getValue();
		byte[] encryption_key = BytesPrimitive.read(bytes).getValue();
		byte[] encryption_iv = BytesPrimitive.read(bytes).getValue();
		ArrayList<TlObject> file_hashes = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		
		return new FileCdnRedirect(dc_id, file_token, encryption_key, encryption_iv, file_hashes);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		
		
		bOut.write(new IntPrimitive(this.dc_id).write());
		bOut.write(new BytesPrimitive(this.file_token).write());
		bOut.write(new BytesPrimitive(this.encryption_key).write());
		bOut.write(new BytesPrimitive(this.encryption_iv).write());
		bOut.write(new VectorPrimitive(this.file_hashes).write());
		
		return bOut.toByteArray();
    }
}
