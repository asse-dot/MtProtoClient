//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class MessageActionGiftPremium extends TlObject {

    public static final int ID = -935499028;

    public String currency;
	public long amount;
	public int months;
	public String crypto_currency;
	public long crypto_amount;

    public MessageActionGiftPremium(String currency, long amount, int months, String crypto_currency, long crypto_amount) {
        this.currency = currency;
		this.amount = amount;
		this.months = months;
		this.crypto_currency = crypto_currency;
		this.crypto_amount = crypto_amount;
    }

    public static MessageActionGiftPremium read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		String currency = StringPrimitive.read(bytes).getValue();
		long amount = LongPrimitive.read(bytes).getValue();
		int months = IntPrimitive.read(bytes).getValue();
		String crypto_currency = (flags & (1 << 0)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		long crypto_amount = (flags & (1 << 0)) != 0 ?  LongPrimitive.read(bytes).getValue() : 0;
		
		return new MessageActionGiftPremium(currency, amount, months, crypto_currency, crypto_amount);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.crypto_currency != null) ? (1 << 0) : 0;
		flags |= (this.crypto_amount != 0) ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new StringPrimitive(this.currency).write());
		bOut.write(new LongPrimitive(this.amount).write());
		bOut.write(new IntPrimitive(this.months).write());
		if(this.crypto_currency != null)
			bOut.write(new StringPrimitive(this.crypto_currency).write());
		if(this.crypto_amount != 0)
			bOut.write(new LongPrimitive(this.crypto_amount).write());
		
		return bOut.toByteArray();
    }
}
