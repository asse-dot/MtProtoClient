//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class UpdateChannelReadMessagesContents extends TlObject {

    public static final int ID = -366410403;

    public long channel_id;
	public int top_msg_id;
	public ArrayList<TlObject> messages;

    public UpdateChannelReadMessagesContents(long channel_id, int top_msg_id, ArrayList<TlObject> messages) {
        this.channel_id = channel_id;
		this.top_msg_id = top_msg_id;
		this.messages = messages;
    }

    public static UpdateChannelReadMessagesContents read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		long channel_id = LongPrimitive.read(bytes).getValue();
		int top_msg_id = (flags & (1 << 0)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		ArrayList<TlObject> messages = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		
		return new UpdateChannelReadMessagesContents(channel_id, top_msg_id, messages);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.top_msg_id != 0) ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new LongPrimitive(this.channel_id).write());
		if(this.top_msg_id != 0)
			bOut.write(new IntPrimitive(this.top_msg_id).write());
		bOut.write(new VectorPrimitive(this.messages).write());
		
		return bOut.toByteArray();
    }
}
