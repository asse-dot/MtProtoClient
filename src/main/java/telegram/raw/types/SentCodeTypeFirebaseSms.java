//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types.auth;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class SentCodeTypeFirebaseSms extends TlObject {

    public static final int ID = -444918734;

    public byte[] nonce;
	public String receipt;
	public int push_timeout;
	public int length;

    public SentCodeTypeFirebaseSms(byte[] nonce, String receipt, int push_timeout, int length) {
        this.nonce = nonce;
		this.receipt = receipt;
		this.push_timeout = push_timeout;
		this.length = length;
    }

    public static SentCodeTypeFirebaseSms read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		byte[] nonce = (flags & (1 << 0)) != 0 ?  BytesPrimitive.read(bytes).getValue() : null;
		String receipt = (flags & (1 << 1)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		int push_timeout = (flags & (1 << 1)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		int length = IntPrimitive.read(bytes).getValue();
		
		return new SentCodeTypeFirebaseSms(nonce, receipt, push_timeout, length);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.nonce != null) ? (1 << 0) : 0;
		flags |= (this.receipt != null) ? (1 << 1) : 0;
		flags |= (this.push_timeout != 0) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		if(this.nonce != null)
			bOut.write(new BytesPrimitive(this.nonce).write());
		if(this.receipt != null)
			bOut.write(new StringPrimitive(this.receipt).write());
		if(this.push_timeout != 0)
			bOut.write(new IntPrimitive(this.push_timeout).write());
		bOut.write(new IntPrimitive(this.length).write());
		
		return bOut.toByteArray();
    }
}
