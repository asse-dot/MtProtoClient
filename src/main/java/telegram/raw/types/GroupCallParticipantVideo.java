//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GroupCallParticipantVideo extends TlObject {

    public static final int ID = 1735736008;

    public boolean paused;
	public String endpoint;
	public ArrayList<TlObject> source_groups;
	public int audio_source;

    public GroupCallParticipantVideo(boolean paused, String endpoint, ArrayList<TlObject> source_groups, int audio_source) {
        this.paused = paused;
		this.endpoint = endpoint;
		this.source_groups = source_groups;
		this.audio_source = audio_source;
    }

    public static GroupCallParticipantVideo read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean paused = (flags & (1 << 0)) != 0;
		String endpoint = StringPrimitive.read(bytes).getValue();
		ArrayList<TlObject> source_groups = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		int audio_source = (flags & (1 << 1)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new GroupCallParticipantVideo(paused, endpoint, source_groups, audio_source);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.paused ? (1 << 0) : 0;
		flags |= (this.audio_source != 0) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new StringPrimitive(this.endpoint).write());
		bOut.write(new VectorPrimitive(this.source_groups).write());
		if(this.audio_source != 0)
			bOut.write(new IntPrimitive(this.audio_source).write());
		
		return bOut.toByteArray();
    }
}
