//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class MessageMediaDocument extends TlObject {

    public static final int ID = -1666158377;

    public boolean nopremium;
	public boolean spoiler;
	public TlObject document;
	public int ttl_seconds;

    public MessageMediaDocument(boolean nopremium, boolean spoiler, TlObject document, int ttl_seconds) {
        this.nopremium = nopremium;
		this.spoiler = spoiler;
		this.document = document;
		this.ttl_seconds = ttl_seconds;
    }

    public static MessageMediaDocument read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean nopremium = (flags & (1 << 3)) != 0;
		boolean spoiler = (flags & (1 << 4)) != 0;
		TlObject document = (flags & (1 << 0)) != 0 ?  TlObject.read(bytes) : null;
		int ttl_seconds = (flags & (1 << 2)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new MessageMediaDocument(nopremium, spoiler, document, ttl_seconds);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.nopremium ? (1 << 3) : 0;
		flags |= this.spoiler ? (1 << 4) : 0;
		flags |= (this.document != null) ? (1 << 0) : 0;
		flags |= (this.ttl_seconds != 0) ? (1 << 2) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		if(this.document != null)
			bOut.write(this.document.write());
		if(this.ttl_seconds != 0)
			bOut.write(new IntPrimitive(this.ttl_seconds).write());
		
		return bOut.toByteArray();
    }
}
