//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class UpdatesCombined extends TlObject {

    public static final int ID = 1918567619;

    public ArrayList<TlObject> updates;
	public ArrayList<TlObject> users;
	public ArrayList<TlObject> chats;
	public int date;
	public int seq_start;
	public int seq;

    public UpdatesCombined(ArrayList<TlObject> updates, ArrayList<TlObject> users, ArrayList<TlObject> chats, int date, int seq_start, int seq) {
        this.updates = updates;
		this.users = users;
		this.chats = chats;
		this.date = date;
		this.seq_start = seq_start;
		this.seq = seq;
    }

    public static UpdatesCombined read(ByteArrayInputStream bytes) throws IOException {
        ArrayList<TlObject> updates = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> users = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> chats = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		int date = IntPrimitive.read(bytes).getValue();
		int seq_start = IntPrimitive.read(bytes).getValue();
		int seq = IntPrimitive.read(bytes).getValue();
		
		return new UpdatesCombined(updates, users, chats, date, seq_start, seq);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		
		
		bOut.write(new VectorPrimitive(this.updates).write());
		bOut.write(new VectorPrimitive(this.users).write());
		bOut.write(new VectorPrimitive(this.chats).write());
		bOut.write(new IntPrimitive(this.date).write());
		bOut.write(new IntPrimitive(this.seq_start).write());
		bOut.write(new IntPrimitive(this.seq).write());
		
		return bOut.toByteArray();
    }
}
