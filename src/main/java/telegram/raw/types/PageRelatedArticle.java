//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class PageRelatedArticle extends TlObject {

    public static final int ID = -1282352120;

    public String url;
	public long webpage_id;
	public String title;
	public String description;
	public long photo_id;
	public String author;
	public int published_date;

    public PageRelatedArticle(String url, long webpage_id, String title, String description, long photo_id, String author, int published_date) {
        this.url = url;
		this.webpage_id = webpage_id;
		this.title = title;
		this.description = description;
		this.photo_id = photo_id;
		this.author = author;
		this.published_date = published_date;
    }

    public static PageRelatedArticle read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		String url = StringPrimitive.read(bytes).getValue();
		long webpage_id = LongPrimitive.read(bytes).getValue();
		String title = (flags & (1 << 0)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		String description = (flags & (1 << 1)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		long photo_id = (flags & (1 << 2)) != 0 ?  LongPrimitive.read(bytes).getValue() : 0;
		String author = (flags & (1 << 3)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		int published_date = (flags & (1 << 4)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		
		return new PageRelatedArticle(url, webpage_id, title, description, photo_id, author, published_date);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.title != null) ? (1 << 0) : 0;
		flags |= (this.description != null) ? (1 << 1) : 0;
		flags |= (this.photo_id != 0) ? (1 << 2) : 0;
		flags |= (this.author != null) ? (1 << 3) : 0;
		flags |= (this.published_date != 0) ? (1 << 4) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new StringPrimitive(this.url).write());
		bOut.write(new LongPrimitive(this.webpage_id).write());
		if(this.title != null)
			bOut.write(new StringPrimitive(this.title).write());
		if(this.description != null)
			bOut.write(new StringPrimitive(this.description).write());
		if(this.photo_id != 0)
			bOut.write(new LongPrimitive(this.photo_id).write());
		if(this.author != null)
			bOut.write(new StringPrimitive(this.author).write());
		if(this.published_date != 0)
			bOut.write(new IntPrimitive(this.published_date).write());
		
		return bOut.toByteArray();
    }
}
