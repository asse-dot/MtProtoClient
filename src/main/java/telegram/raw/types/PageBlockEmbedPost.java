//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class PageBlockEmbedPost extends TlObject {

    public static final int ID = -229005301;

    public String url;
	public long webpage_id;
	public long author_photo_id;
	public String author;
	public int date;
	public ArrayList<TlObject> blocks;
	public TlObject caption;

    public PageBlockEmbedPost(String url, long webpage_id, long author_photo_id, String author, int date, ArrayList<TlObject> blocks, TlObject caption) {
        this.url = url;
		this.webpage_id = webpage_id;
		this.author_photo_id = author_photo_id;
		this.author = author;
		this.date = date;
		this.blocks = blocks;
		this.caption = caption;
    }

    public static PageBlockEmbedPost read(ByteArrayInputStream bytes) throws IOException {
        String url = StringPrimitive.read(bytes).getValue();
		long webpage_id = LongPrimitive.read(bytes).getValue();
		long author_photo_id = LongPrimitive.read(bytes).getValue();
		String author = StringPrimitive.read(bytes).getValue();
		int date = IntPrimitive.read(bytes).getValue();
		ArrayList<TlObject> blocks = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		TlObject caption = TlObject.read(bytes);
		
		return new PageBlockEmbedPost(url, webpage_id, author_photo_id, author, date, blocks, caption);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		
		
		bOut.write(new StringPrimitive(this.url).write());
		bOut.write(new LongPrimitive(this.webpage_id).write());
		bOut.write(new LongPrimitive(this.author_photo_id).write());
		bOut.write(new StringPrimitive(this.author).write());
		bOut.write(new IntPrimitive(this.date).write());
		bOut.write(new VectorPrimitive(this.blocks).write());
		bOut.write(this.caption.write());
		
		return bOut.toByteArray();
    }
}
