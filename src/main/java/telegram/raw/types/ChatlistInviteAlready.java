//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types.chatlists;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class ChatlistInviteAlready extends TlObject {

    public static final int ID = -91752871;

    public int filter_id;
	public ArrayList<TlObject> missing_peers;
	public ArrayList<TlObject> already_peers;
	public ArrayList<TlObject> chats;
	public ArrayList<TlObject> users;

    public ChatlistInviteAlready(int filter_id, ArrayList<TlObject> missing_peers, ArrayList<TlObject> already_peers, ArrayList<TlObject> chats, ArrayList<TlObject> users) {
        this.filter_id = filter_id;
		this.missing_peers = missing_peers;
		this.already_peers = already_peers;
		this.chats = chats;
		this.users = users;
    }

    public static ChatlistInviteAlready read(ByteArrayInputStream bytes) throws IOException {
        int filter_id = IntPrimitive.read(bytes).getValue();
		ArrayList<TlObject> missing_peers = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> already_peers = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> chats = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		ArrayList<TlObject> users = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		
		return new ChatlistInviteAlready(filter_id, missing_peers, already_peers, chats, users);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		
		
		bOut.write(new IntPrimitive(this.filter_id).write());
		bOut.write(new VectorPrimitive(this.missing_peers).write());
		bOut.write(new VectorPrimitive(this.already_peers).write());
		bOut.write(new VectorPrimitive(this.chats).write());
		bOut.write(new VectorPrimitive(this.users).write());
		
		return bOut.toByteArray();
    }
}
