//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class UpdateBotInlineQuery extends TlObject {

    public static final int ID = 1232025500;

    public long query_id;
	public long user_id;
	public String query;
	public TlObject geo;
	public TlObject peer_type;
	public String offset;

    public UpdateBotInlineQuery(long query_id, long user_id, String query, TlObject geo, TlObject peer_type, String offset) {
        this.query_id = query_id;
		this.user_id = user_id;
		this.query = query;
		this.geo = geo;
		this.peer_type = peer_type;
		this.offset = offset;
    }

    public static UpdateBotInlineQuery read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		long query_id = LongPrimitive.read(bytes).getValue();
		long user_id = LongPrimitive.read(bytes).getValue();
		String query = StringPrimitive.read(bytes).getValue();
		TlObject geo = (flags & (1 << 0)) != 0 ?  TlObject.read(bytes) : null;
		TlObject peer_type = (flags & (1 << 1)) != 0 ?  TlObject.read(bytes) : null;
		String offset = StringPrimitive.read(bytes).getValue();
		
		return new UpdateBotInlineQuery(query_id, user_id, query, geo, peer_type, offset);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= (this.geo != null) ? (1 << 0) : 0;
		flags |= (this.peer_type != null) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new LongPrimitive(this.query_id).write());
		bOut.write(new LongPrimitive(this.user_id).write());
		bOut.write(new StringPrimitive(this.query).write());
		if(this.geo != null)
			bOut.write(this.geo.write());
		if(this.peer_type != null)
			bOut.write(this.peer_type.write());
		bOut.write(new StringPrimitive(this.offset).write());
		
		return bOut.toByteArray();
    }
}
