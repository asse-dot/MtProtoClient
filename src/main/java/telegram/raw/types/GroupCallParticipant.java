//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class GroupCallParticipant extends TlObject {

    public static final int ID = -341428482;

    public boolean muted;
	public boolean left;
	public boolean can_self_unmute;
	public boolean just_joined;
	public boolean versioned;
	public boolean min;
	public boolean muted_by_you;
	public boolean volume_by_admin;
	public boolean self;
	public boolean video_joined;
	public TlObject peer;
	public int date;
	public int active_date;
	public int source;
	public int volume;
	public String about;
	public long raise_hand_rating;
	public TlObject video;
	public TlObject presentation;

    public GroupCallParticipant(boolean muted, boolean left, boolean can_self_unmute, boolean just_joined, boolean versioned, boolean min, boolean muted_by_you, boolean volume_by_admin, boolean self, boolean video_joined, TlObject peer, int date, int active_date, int source, int volume, String about, long raise_hand_rating, TlObject video, TlObject presentation) {
        this.muted = muted;
		this.left = left;
		this.can_self_unmute = can_self_unmute;
		this.just_joined = just_joined;
		this.versioned = versioned;
		this.min = min;
		this.muted_by_you = muted_by_you;
		this.volume_by_admin = volume_by_admin;
		this.self = self;
		this.video_joined = video_joined;
		this.peer = peer;
		this.date = date;
		this.active_date = active_date;
		this.source = source;
		this.volume = volume;
		this.about = about;
		this.raise_hand_rating = raise_hand_rating;
		this.video = video;
		this.presentation = presentation;
    }

    public static GroupCallParticipant read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean muted = (flags & (1 << 0)) != 0;
		boolean left = (flags & (1 << 1)) != 0;
		boolean can_self_unmute = (flags & (1 << 2)) != 0;
		boolean just_joined = (flags & (1 << 4)) != 0;
		boolean versioned = (flags & (1 << 5)) != 0;
		boolean min = (flags & (1 << 8)) != 0;
		boolean muted_by_you = (flags & (1 << 9)) != 0;
		boolean volume_by_admin = (flags & (1 << 10)) != 0;
		boolean self = (flags & (1 << 12)) != 0;
		boolean video_joined = (flags & (1 << 15)) != 0;
		TlObject peer = TlObject.read(bytes);
		int date = IntPrimitive.read(bytes).getValue();
		int active_date = (flags & (1 << 3)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		int source = IntPrimitive.read(bytes).getValue();
		int volume = (flags & (1 << 7)) != 0 ?  IntPrimitive.read(bytes).getValue() : 0;
		String about = (flags & (1 << 11)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		long raise_hand_rating = (flags & (1 << 13)) != 0 ?  LongPrimitive.read(bytes).getValue() : 0;
		TlObject video = (flags & (1 << 6)) != 0 ?  TlObject.read(bytes) : null;
		TlObject presentation = (flags & (1 << 14)) != 0 ?  TlObject.read(bytes) : null;
		
		return new GroupCallParticipant(muted, left, can_self_unmute, just_joined, versioned, min, muted_by_you, volume_by_admin, self, video_joined, peer, date, active_date, source, volume, about, raise_hand_rating, video, presentation);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.muted ? (1 << 0) : 0;
		flags |= this.left ? (1 << 1) : 0;
		flags |= this.can_self_unmute ? (1 << 2) : 0;
		flags |= this.just_joined ? (1 << 4) : 0;
		flags |= this.versioned ? (1 << 5) : 0;
		flags |= this.min ? (1 << 8) : 0;
		flags |= this.muted_by_you ? (1 << 9) : 0;
		flags |= this.volume_by_admin ? (1 << 10) : 0;
		flags |= this.self ? (1 << 12) : 0;
		flags |= this.video_joined ? (1 << 15) : 0;
		flags |= (this.active_date != 0) ? (1 << 3) : 0;
		flags |= (this.volume != 0) ? (1 << 7) : 0;
		flags |= (this.about != null) ? (1 << 11) : 0;
		flags |= (this.raise_hand_rating != 0) ? (1 << 13) : 0;
		flags |= (this.video != null) ? (1 << 6) : 0;
		flags |= (this.presentation != null) ? (1 << 14) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(this.peer.write());
		bOut.write(new IntPrimitive(this.date).write());
		if(this.active_date != 0)
			bOut.write(new IntPrimitive(this.active_date).write());
		bOut.write(new IntPrimitive(this.source).write());
		if(this.volume != 0)
			bOut.write(new IntPrimitive(this.volume).write());
		if(this.about != null)
			bOut.write(new StringPrimitive(this.about).write());
		if(this.raise_hand_rating != 0)
			bOut.write(new LongPrimitive(this.raise_hand_rating).write());
		if(this.video != null)
			bOut.write(this.video.write());
		if(this.presentation != null)
			bOut.write(this.presentation.write());
		
		return bOut.toByteArray();
    }
}
