//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class PhoneConnection extends TlObject {

    public static final int ID = -1665063993;

    public boolean tcp;
	public long id;
	public String ip;
	public String ipv6;
	public int port;
	public byte[] peer_tag;

    public PhoneConnection(boolean tcp, long id, String ip, String ipv6, int port, byte[] peer_tag) {
        this.tcp = tcp;
		this.id = id;
		this.ip = ip;
		this.ipv6 = ipv6;
		this.port = port;
		this.peer_tag = peer_tag;
    }

    public static PhoneConnection read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean tcp = (flags & (1 << 0)) != 0;
		long id = LongPrimitive.read(bytes).getValue();
		String ip = StringPrimitive.read(bytes).getValue();
		String ipv6 = StringPrimitive.read(bytes).getValue();
		int port = IntPrimitive.read(bytes).getValue();
		byte[] peer_tag = BytesPrimitive.read(bytes).getValue();
		
		return new PhoneConnection(tcp, id, ip, ipv6, port, peer_tag);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.tcp ? (1 << 0) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new LongPrimitive(this.id).write());
		bOut.write(new StringPrimitive(this.ip).write());
		bOut.write(new StringPrimitive(this.ipv6).write());
		bOut.write(new IntPrimitive(this.port).write());
		bOut.write(new BytesPrimitive(this.peer_tag).write());
		
		return bOut.toByteArray();
    }
}
