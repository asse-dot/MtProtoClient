//this is an autogenerated file!!
//!!!!!!!!!!
package telegram.raw.types.help;

import telegram.raw.core.TlObject;
import telegram.raw.core.primitives.BytesPrimitive;
import telegram.raw.core.primitives.StringPrimitive;
import telegram.raw.core.primitives.VectorPrimitive;
import telegram.raw.core.primitives.integers.IntPrimitive;
import telegram.raw.core.primitives.integers.LongPrimitive;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class Country extends TlObject {

    public static final int ID = -1014526429;

    public boolean hidden;
	public String iso2;
	public String default_name;
	public String name;
	public ArrayList<TlObject> country_codes;

    public Country(boolean hidden, String iso2, String default_name, String name, ArrayList<TlObject> country_codes) {
        this.hidden = hidden;
		this.iso2 = iso2;
		this.default_name = default_name;
		this.name = name;
		this.country_codes = country_codes;
    }

    public static Country read(ByteArrayInputStream bytes) throws IOException {
        int flags = IntPrimitive.read(bytes).getValue();
		boolean hidden = (flags & (1 << 0)) != 0;
		String iso2 = StringPrimitive.read(bytes).getValue();
		String default_name = StringPrimitive.read(bytes).getValue();
		String name = (flags & (1 << 1)) != 0 ?  StringPrimitive.read(bytes).getValue() : null;
		ArrayList<TlObject> country_codes = ((VectorPrimitive)TlObject.read(bytes)).getValue();
		
		return new Country(hidden, iso2, default_name, name, country_codes);
    }

    @Override
    public byte[] write() throws IOException {
        ByteArrayOutputStream bOut = new ByteArrayOutputStream();
		
		bOut.write(new IntPrimitive(ID).write());
		int flags = 0;
		flags |= this.hidden ? (1 << 0) : 0;
		flags |= (this.name != null) ? (1 << 1) : 0;
		
		
		bOut.write(new IntPrimitive(flags).write());
		bOut.write(new StringPrimitive(this.iso2).write());
		bOut.write(new StringPrimitive(this.default_name).write());
		if(this.name != null)
			bOut.write(new StringPrimitive(this.name).write());
		bOut.write(new VectorPrimitive(this.country_codes).write());
		
		return bOut.toByteArray();
    }
}
